@model QuizApp.ViewModel.Managing.TestingUrlViewModel

@{
                /**/

                ViewBag.Title = "CreateTestingUrl";
}

<h2>CreateTestingUrl</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TestingUrlViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TestName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.TestGuid, new SelectList(ViewBag.allTestsName, "Guid", "Name"), "--- Select test ---", new { @class = "form-control", @Id = "testGui" })
                @Html.ValidationMessageFor(model => model.TestGuid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Interviewee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Interviewee, new { htmlAttributes = new { @class = "form-control", @id = "Inter" } })
                @Html.ValidationMessageFor(model => model.Interviewee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfRuns, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfRuns, new { htmlAttributes = new { @class = "form-control", @Value = "10" } })
                @Html.ValidationMessageFor(model => model.NumberOfRuns, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowedStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="datetime-local" name="AllowedStartDate" class="form-control" value="1970-01-01T00:00">
                @Html.ValidationMessageFor(model => model.AllowedStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowedEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="datetime-local" name="AllowedEndDate" class="form-control" value="2030-01-01T00:00">
                @Html.ValidationMessageFor(model => model.AllowedEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsValid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsValid)
                    @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onClick="return empty()" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script>
    function empty() {
        if ($('#Inter').val() == "" || $('#testGui').val() == "--- Select test ---" ) {
            alert("Input all fields !");
            return false;
        };
    }

</script>
