@model QuizApp.ViewModel.PassingQuiz.TestPassingViewModel

@{
    ViewBag.Title = "QuizDetails";
}
<div style="text-align:center; ">Time to the end <span id="time"></span></div>

@using (Html.BeginForm("FinishTest", "Quiz"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />

        <div class="form-group row">
            <div id="QuestionList" class="col-md-2 pull-right" style="border:4px double black"></div>
        </div>


        <div id="QuestionBlock" class="form-group"></div>


        <input id="AttemptGuid" type="hidden" name="AttemptGuid" />


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="end()" id="sim" type="submit" value="Finish" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<style>
    .block {
        width: 40px;
        height: 40px;
        border: 1px solid black;
        background-color: #3681d3;
        margin: 5px;
        display: inline-block;
        text-align: center;
        vertical-align: middle;
        line-height: 40px;

    }
</style>
<script>

    var dictionary = [];

    window.onload = function () {
        $.getJSON('@Url.Action("GetInfoAndStartTest")', {
            testingUrlGuid: '@ViewBag.guid'
                    })
            .done(function (data) {
                $('#AttemptGuid').val(data.AttemptGuid);
                startTimer(data.TestTimeLimit.TotalSeconds, document.querySelector('#time'));
                $.each(data.Questions, function (i, que) {
                    var link = $('<div />').addClass('block').append($('<h4 />', { value: que.Guid }).html(i));
                    link.on('click', function () {
                        QuestionGenerator(que);
                    });
                    $('#QuestionList').append(link);
                });
            })
            .fail(function (jqxhr, textStatus, error) {
                var err = textStatus + ", " + error;
                console.log("Request Failed: " + err);
            });
    };
    function DictFiller() {
        var QuGuid = document.getElementById("QuestionBlock");
        if (QuGuid.firstChild) {
            var keyGuid = QuGuid.firstChild.getAttribute("value");
            var answers = [];
            QuGuid.firstChild.removeChild(QuGuid.firstChild.firstChild)
            while (QuGuid.firstChild.firstChild) {
                if (QuGuid.firstChild.firstChild.firstChild.checked)
                    answers.push(QuGuid.firstChild.firstChild.firstChild.getAttribute("value"));
                QuGuid.firstChild.removeChild(QuGuid.firstChild.firstChild)
            }
            var addOrNo = true;
            $.each(dictionary, function (i, tmp) {
                if (tmp.QuestionGuid == keyGuid) {
                    dictionary[i] = { QuestionGuid: keyGuid, AnswersSelected : answers }
                    addOrNo = false;
                }
            });
            if (addOrNo)
                dictionary.push({
                    QuestionGuid: keyGuid,
                    AnswersSelected: answers
                })
            QuGuid.removeChild(QuGuid.firstChild);
        }
    }


    function QuestionGenerator(param) {
        DictFiller();
        var answGuid = [] ;
        $.each(dictionary, function (i, que) {
            if (que.QuestionGuid == param.Guid)
                answGuid = dictionary[i].AnswersSelected;
        });
        var block = $('<div />', { value: param.Guid }).html($('<h2 />').html(param.Instance));
        $.each(param.Answers, function (i, answ) {
            var blocktmp = $('<div />');
            var chkbox = $('<input />', { type: 'checkbox', value: answ.Guid })
            if (answGuid.includes(answ.Guid))
                chkbox.prop("checked", true);
            var lbl = $('<h5 />').css("display" , "inline-block").html(answ.Instance);
            blocktmp.append(chkbox , lbl);
            block.append(blocktmp);
        });
        //console.log(dictionary);
        $('#QuestionBlock').append(block);
    }
    function end() {
        DictFiller();

        //$('#QuestionsInput').val(JSON.stringify(dictionary));
        //$('#Deadline').val(@*'@DateTime.Now'*@);


        var toSend = {
            "Score" : '0',
            "TestingGuid" : '@ViewBag.guid' ,
            "Interviewee": '@ViewBag.inter' ,
            "TestingStartDateTime": '@DateTime.Now',
            "TestingEndDateTime": (new Date()).toISOString(),
            "AttemptGuid": $('#AttemptGuid').val(),
            "QuestionTried": dictionary.length ,
            "Questions": dictionary
        }
        $("form").submit(function (e) {
            e.preventDefault();
            $.ajax({
                type: "POST",
                url: "../Quiz/FinishTest",
                contentType : "application/json" ,
                data: JSON.stringify(toSend)
            });
            window.history.back();

        });
    }
    function startTimer(duration, display) {
        var timer = duration, minutes, seconds;
        var tid = setInterval(function () {
            minutes = parseInt(timer / 60, 10)
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            display.textContent = minutes + ":" + seconds;

            if (timer < 1) {
                $("#sim").click()
                clearInterval(tid);
            }
            else
                timer--;

        }, 1000);
    }
</script>